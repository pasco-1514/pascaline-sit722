name: CI Testing and Build

on:
  push:
    branches:
      - testing

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Python (for running pytest in each service)
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Step 3: Install and run tests for Customer Service
      - name: Test Customer Service
        working-directory: backend/customer_service
        run: |
          pip install -r requirements-dev.txt
          pytest --maxfail=1 --disable-warnings -q

      # Step 4: Install and run tests for Order Service
      - name: Test Order Service
        working-directory: backend/order_service
        run: |
          pip install -r requirements-dev.txt
          pytest --maxfail=1 --disable-warnings -q

      # Step 5: Install and run tests for Product Service
      - name: Test Product Service
        working-directory: backend/product_service
        run: |
          pip install -r requirements-dev.txt
          pytest --maxfail=1 --disable-warnings -q

      # Step 6: Log in to Azure Container Registry
      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      # Step 7: Build and Push Customer Service Image
      - name: Build and Push Customer Service
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/customer_service:${{ github.sha }} backend/customer_service
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/customer_service:${{ github.sha }}

      # Step 8: Build and Push Order Service Image
      - name: Build and Push Order Service
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/order_service:${{ github.sha }} backend/order_service
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/order_service:${{ github.sha }}

      # Step 9: Build and Push Product Service Image
      - name: Build and Push Product Service
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/product_service:${{ github.sha }} backend/product_service
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/product_service:${{ github.sha }}

      # Step 10: Build and Push Frontend Image
      - name: Build and Push Frontend
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/frontend:${{ github.sha }} frontend
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/frontend:${{ github.sha }}
